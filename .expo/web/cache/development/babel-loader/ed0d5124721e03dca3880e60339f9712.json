{"ast":null,"code":"import { SIGN_UP, FETCH_DATA } from \"./types\";\nexport var signUp = function signUp(email) {\n  return {\n    type: SIGN_UP,\n    payload: {\n      email: email\n    }\n  };\n};\nexport var fetchData = function fetchData(data) {\n  return {\n    type: FETCH_DATA,\n    data: data\n  };\n};\nexport var fetchAPIData = function fetchAPIData() {\n  return function (dispatch) {\n    return fetch('https://jsonplaceholder.typicode.com/posts').then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return dispatch(fetchData(json.slice(0, 5)));\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n};","map":{"version":3,"sources":["/home/ec2-user/environment/Bassara/src/redux/actions.js"],"names":["SIGN_UP","FETCH_DATA","signUp","email","type","payload","fetchData","data","fetchAPIData","dispatch","fetch","then","response","json","slice","catch","error","console","log"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,UAAlB;AAEA,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD;AAAA,SAAY;AAChCC,IAAAA,IAAI,EAAEJ,OAD0B;AAEhCK,IAAAA,OAAO,EAAE;AACPF,MAAAA,KAAK,EAAEA;AADA;AAFuB,GAAZ;AAAA,CAAf;AAOP,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAU;AACjC,SAAO;AACLH,IAAAA,IAAI,EAAEH,UADD;AAELM,IAAAA,IAAI,EAAEA;AAFD,GAAP;AAID,CALM;AAOP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAEhC,SAAO,UAACC,QAAD,EAAc;AACjB,WAAOC,KAAK,CAAC,4CAAD,CAAL,CACNC,IADM,CACD,UAACC,QAAD,EAAc;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AAAuB,KAFlB,EAGNF,IAHM,CAGD,UAACE,IAAD,EAAU;AACd,aAAOJ,QAAQ,CAACH,SAAS,CAACO,IAAI,CAACC,KAAL,CAAW,CAAX,EAAa,CAAb,CAAD,CAAV,CAAf;AACD,KALM,EAMNC,KANM,CAMA,UAACC,KAAD;AAAA,aAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAAX;AAAA,KANA,CAAP;AAOL,GARC;AASD,CAXM","sourcesContent":["import { SIGN_UP, FETCH_DATA } from \"./types\";\n\nexport const signUp = (email) => ({\n  type: SIGN_UP,\n  payload: {\n    email: email,\n  },\n});\n\nexport const fetchData = (data) => {\n  return {\n    type: FETCH_DATA,\n    data: data\n  }\n};\n\nexport const fetchAPIData = () => {\n  // Fetching data from online api and limiting to first 5 results\n  return (dispatch) => {\n      return fetch('https://jsonplaceholder.typicode.com/posts')\n      .then((response) => {\n        return response.json()})\n      .then((json) => {\n        return dispatch(fetchData(json.slice(0,5)));\n      } )\n      .catch((error) => console.log(error))\n}\n}\n"]},"metadata":{},"sourceType":"module"}