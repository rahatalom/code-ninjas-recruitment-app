{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/ec2-user/environment/Bassara/src/App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { registerRootComponent } from \"expo\";\nimport Navigator from \"./components/Navigator\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 7\n        }\n      }, React.createElement(PaperProvider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }, React.createElement(Navigator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }\n      })));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nregisterRootComponent(App);","map":{"version":3,"sources":["/home/ec2-user/environment/Bassara/src/App.js"],"names":["React","Provider","PaperProvider","store","registerRootComponent","Navigator","App","Component"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAQ,IAAIC,aAArB,QAA0C,oBAA1C;AACA,OAAOC,KAAP;AACA,SAASF,QAAT,QAAyB,aAAzB;AACA,SAASG,qBAAT,QAAsC,MAAtC;AACA,OAAOC,SAAP;;IAOMC,G;;;;;;;;;;;;;6BACK;AACP,aACE,oBAAC,QAAD;AAAU,QAAA,KAAK,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF;AAOD;;;;EATeH,KAAK,CAACO,S;;AAaxBH,qBAAqB,CAACE,GAAD,CAArB","sourcesContent":["import React from \"react\";\nimport { Provider as PaperProvider } from \"react-native-paper\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { registerRootComponent } from \"expo\";\nimport Navigator from \"./components/Navigator\";\n\n/* This is the root component for your app.\n * The Provider component makes the redux store available for nested child components.\n * PaperProvider allows us to apply theme to nested child components.\n * Navigator (a react-navigation component) contains the main app screens, manages the navigation tree, and contains the navigation state.\n */\nclass App extends React.Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <PaperProvider>\n          <Navigator />\n        </PaperProvider>\n      </Provider>\n    );\n  }\n}\n\n// This method to change app entry point, as per the expo documentation here https://docs.expo.io/versions/latest/sdk/register-root-component/\nregisterRootComponent(App);\n"]},"metadata":{},"sourceType":"module"}