{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/ec2-user/environment/Bassara/src/screens/SignInScreen.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { TextInput, Subheading, Headline, Button } from \"react-native-paper\";\nimport { signIn } from \"../redux/actions\";\nimport { connect } from \"react-redux\";\n\nvar SignInScreen = function SignInScreen(_ref) {\n  var signIn = _ref.signIn,\n      signInAttempted = _ref.signInAttempted,\n      navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      setUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, React.createElement(Subheading, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, \"Enter your username\"), React.createElement(TextInput, {\n    mode: \"outlined\",\n    placeholder: \"Enter your username here\",\n    clearButtonMode: \"unless-editing\",\n    autoCompleteType: \"username\",\n    style: styles.textInput,\n    onChangeText: function onChangeText(text) {\n      return setUsername(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }), React.createElement(Subheading, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, \"Enter your password\"), React.createElement(TextInput, {\n    mode: \"outlined\",\n    placeholder: \"Enter your password here\",\n    style: styles.textInput,\n    secureTextEntry: true,\n    clearButtonMode: \"unless-editing\",\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }), React.createElement(Button, {\n    color: \"#00303f\",\n    mode: \"contained\",\n    style: styles.button,\n    onPress: function onPress() {\n      signIn(username, password);\n      console.log(signInAttempted);\n\n      if (signInAttempted) {\n        navigation.navigate('Confirm Details');\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"Sign In\"));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    signInAttempted: state.signInReducer.signInAttempted\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn: signIn\n})(SignInScreen);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 5,\n    backgroundColor: \"#cae4db\"\n  },\n  title: {\n    marginTop: 30,\n    marginBottom: 5\n  },\n  textInput: {\n    paddingHorizontal: 10\n  },\n  button: {\n    width: 130,\n    alignSelf: \"center\",\n    marginVertical: 30\n  },\n  text: {\n    paddingHorizontal: 10,\n    paddingTop: 20\n  }\n});","map":{"version":3,"sources":["/home/ec2-user/environment/Bassara/src/screens/SignInScreen.js"],"names":["React","useState","TextInput","Subheading","Headline","Button","signIn","connect","SignInScreen","signInAttempted","navigation","username","setUsername","password","setPassword","styles","container","text","textInput","button","console","log","navigate","mapStateToProps","state","signInReducer","StyleSheet","create","flex","padding","backgroundColor","title","marginTop","marginBottom","paddingHorizontal","width","alignSelf","marginVertical","paddingTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { StyleSheet, SafeAreaView } from \"react-native\";\nimport { TextInput, Subheading, Headline, Button } from \"react-native-paper\";\nimport { signIn } from \"../redux/actions\";\nimport { connect } from \"react-redux\";\n\nconst SignInScreen = function ({signIn, signInAttempted, navigation}) {\n    //Notice how only email inputs are captured and sent to the store. How would you improve this functionality for your app?\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    return (\n        <SafeAreaView style={styles.container}>\n            {/*<Headline style={styles.title}> Sign into your account</Headline>*/}\n            <Subheading style={styles.text}>Enter your username</Subheading>\n            <TextInput\n                mode=\"outlined\"\n                placeholder=\"Enter your username here\"\n                clearButtonMode=\"unless-editing\"\n                autoCompleteType=\"username\"\n                style={styles.textInput}\n                onChangeText={(text) => setUsername(text)}\n            />\n          <Subheading style={styles.text}>Enter your password</Subheading>\n          <TextInput\n            mode=\"outlined\"\n            placeholder=\"Enter your password here\"\n            style={styles.textInput}\n            secureTextEntry={true}\n            clearButtonMode=\"unless-editing\"\n            onChangeText={(text) => setPassword(text)}\n          />\n          <Button\n            color=\"#00303f\"\n            mode=\"contained\"\n            style={styles.button}\n            onPress={() => {\n                signIn(username, password);\n                //add the signInAttempted stuff\n                console.log(signInAttempted);\n                if(signInAttempted){\n                    navigation.navigate('Confirm Details');\n                }\n            }}\n          >\n            Sign In\n          </Button>\n        </SafeAreaView>\n    );\n};\nconst mapStateToProps = (state) => {\n    return {\n        signInAttempted: state.signInReducer.signInAttempted,\n    };\n};\nexport default connect(mapStateToProps,{ signIn })(SignInScreen);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 5,\n    backgroundColor: \"#cae4db\",\n  },\n  \n  title: {\n    marginTop: 30,\n    marginBottom: 5,\n  },\n  \n  textInput: {\n    paddingHorizontal: 10,\n  },\n  \n  button: {\n    width: 130,\n    alignSelf: \"center\",\n    marginVertical: 30,\n  },\n  \n  text: {\n    paddingHorizontal: 10,\n    paddingTop: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}